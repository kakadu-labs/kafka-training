services:
  kafka-broker-1:
    image: apache/kafka:4.0.0
    hostname: kafka-broker-1
    container_name: kafka-broker-1
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-broker-1:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_LISTENERS: "PLAINTEXT://kafka-broker-1:29092,CONTROLLER://kafka-broker-1:19092,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-broker-1:19092,2@kafka-broker-2:19093,3@kafka-broker-3:19094"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_IN_SYNC_REPLICAS: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    volumes:
      - kafka-broker-1-data:/var/lib/kafka/data

  kafka-broker-2:
    image: apache/kafka:4.0.0
    hostname: kafka-broker-2
    container_name: kafka-broker-2
    ports:
      - "9093:9093"
      - "19093:19093"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-broker-2:29093,PLAINTEXT_HOST://localhost:9093"
      KAFKA_LISTENERS: "PLAINTEXT://kafka-broker-2:29093,CONTROLLER://kafka-broker-2:19093,PLAINTEXT_HOST://0.0.0.0:9093"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-broker-1:19092,2@kafka-broker-2:19093,3@kafka-broker-3:19094"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_IN_SYNC_REPLICAS: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    volumes:
      - kafka-broker-2-data:/var/lib/kafka/data

  kafka-broker-3:
    image: apache/kafka:4.0.0
    hostname: kafka-broker-3
    container_name: kafka-broker-3
    ports:
      - "9094:9094"
      - "19094:19094"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-broker-3:29094,PLAINTEXT_HOST://localhost:9094"
      KAFKA_LISTENERS: "PLAINTEXT://kafka-broker-3:29094,CONTROLLER://kafka-broker-3:19094,PLAINTEXT_HOST://0.0.0.0:9094"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-broker-1:19092,2@kafka-broker-2:19093,3@kafka-broker-3:19094"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_IN_SYNC_REPLICAS: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    volumes:
      - kafka-broker-3-data:/var/lib/kafka/data

  # Optional: Kafka UI for management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8070:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-1:29092,kafka-broker-2:29093,kafka-broker-3:29094
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://karapace-schema-registry:7081

  karapace-schema-registry:
    image: ghcr.io/aiven-open/karapace:5.0.0
    entrypoint:
      - python3
      - -m
      - karapace

    ports:
      - 7081:7081
    volumes:
      - ./certs:/opt/karapace/certs
    environment:
      KARAPACE_KARAPACE_REGISTRY: true
      KARAPACE_ADVERTISED_HOSTNAME: karapace-schema-registry
      KARAPACE_ADVERTISED_PROTOCOL: http
      KARAPACE_BOOTSTRAP_URI: kafka-broker-1:29092
      KARAPACE_SECURITY_PROTOCOL: PLAINTEXT
      KARAPACE_PORT: 7081
      KARAPACE_HOST: 0.0.0.0
      KARAPACE_CLIENT_ID: karapace-schema-registry
      KARAPACE_GROUP_ID: karapace-schema-registry
      KARAPACE_MASTER_ELECTION_STRATEGY: highest
      KARAPACE_MASTER_ELIGIBILITY: true
      KARAPACE_TOPIC_NAME: _schemas
      KARAPACE_LOG_LEVEL: INFO
      KARAPACE_COMPATIBILITY: FULL
      KARAPACE_STATSD_HOST: statsd-exporter
      KARAPACE_STATSD_PORT: 8125
      KARAPACE_KAFKA_SCHEMA_READER_STRICT_MODE: false
      KARAPACE_KAFKA_RETRIABLE_ERRORS_SILENCED: true
      KARAPACE_TAGS__APP: karapace-schema-registry
      KARAPACE_TELEMETRY__OTEL_ENDPOINT_URL: http://opentelemetry-collector:4317
      KARAPACE_TELEMETRY__OTEL_METRICS_EXPORTER: OTLP
      KARAPACE_TELEMETRY__OTEL_TRACES_EXPORTER: OTLP
      KARAPACE_TELEMETRY__RESOURCE_SERVICE_NAME: karapace-schema-registry
      KARAPACE_TELEMETRY__RESOURCE_SERVICE_INSTANCE_ID: sr1
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_NAME: opentelemetry
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_LANGUAGE: python
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_VERSION: 1.27.0

  karapace-rest-proxy:
    image: ghcr.io/aiven-open/karapace:5.0.0
    entrypoint:
      - python3
      - -m
      - karapace.kafka_rest_apis
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - karapace-schema-registry
    ports:
      - 7082:7082
    environment:
      KARAPACE_KARAPACE_REST: true
      KARAPACE_PORT: 7082
      KARAPACE_HOST: 0.0.0.0
      KARAPACE_ADVERTISED_HOSTNAME: karapace-rest-proxy
      KARAPACE_ADVERTISED_PROTOCOL: http
      KARAPACE_BOOTSTRAP_URI: kafka:29092
      KARAPACE_REGISTRY_SCHEME: http
      KARAPACE_REGISTRY_HOST: karapace-schema-registry
      KARAPACE_REGISTRY_PORT: 7081
      KARAPACE_ADMIN_METADATA_MAX_AGE: 0
      KARAPACE_LOG_LEVEL: INFO
      KARAPACE_STATSD_HOST: statsd-exporter
      KARAPACE_STATSD_PORT: 8125
      KARAPACE_KAFKA_SCHEMA_READER_STRICT_MODE: false
      KARAPACE_KAFKA_RETRIABLE_ERRORS_SILENCED: true

  # ksqlDB Server
  ksqldb-server:
    image: confluentinc/ksqldb-server:0.29.0
    container_name: ksqldb-server
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksqldb"
      KSQL_BOOTSTRAP_SERVERS: "kafka-broker-1:29092,kafka-broker-2:29093,kafka-broker-3:29094"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://karapace-schema-registry:7081"

  # ksqlDB CLI
  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.29.0
    container_name: ksqldb-cli
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  # ClickHouse Database
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123" # HTTP port
      - "9000:9000" # Native port
      - "9009:9009" # Port for interserver communication
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - clickhouse-logs:/var/log/clickhouse-server
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  arroyo-single:
    image: ghcr.io/arroyosystems/arroyo:latest
    container_name: arroyo-single-node
    ports:
      - "5115:5115"
  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    restart: unless-stopped
    environment:
      ZO_ROOT_USER_EMAIL: "root@example.com"
      ZO_ROOT_USER_PASSWORD: "Complexpass#123"
    ports:
      - "5080:5080"
    volumes:
      - openobservedata:/data

  # External Service Mock
  external-service-mock:
    build:
      context: ./external_service_mock
      dockerfile: Dockerfile
    container_name: external-service-mock
    ports:
      - "3000:3000"
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-your_bot_token_here}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-your_chat_id_here}
    restart: unless-stopped

volumes:
  kafka-broker-1-data:
  kafka-broker-2-data:
  kafka-broker-3-data:
  clickhouse-data:
  clickhouse-logs:
  openobservedata:
